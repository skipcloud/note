#! /bin/sh -
#
# note opens your favourite editor to write a note or edit an existing one,
# these notes are stored in a dedicated notes directory. The only argument is
# the name of the file you want to edit. If the file exists at any level in your
# notes directory it will be opened for you, otherwise a new one is created at
# the top level of your notes directory with the name you've specified. If
# called without an argument it will open the directory for you to browse.
#
# usage: note [--help|-h]
#             [--list|-l]
#             [--search|-s <name>]
#             [--text-search|-t <text...>]
#             [ --delete|-d <name> ]
#             [--] [<name>]

ext=${NOTE_EXT:-md}
no_ext=
notes_dir="${NOTES_DIR:-$HOME/.notes}"
file=

# check_not_empty() will ensure the argument is not empty.
# if it then print an error, print usage, and exit
check_not_empty() {
  if [ -z "$1" ]; then
    error "missing argument"
    usage
    exit 1
  fi
}

# delete_file() will attempt to delete a file, raising an error
# if it cannot do so.
delete_file() {
  find_file $1
  if [ $? != 0 ]; then
    error "'$file' not found"
    exit 1
  fi
  if ! rm $file; then
    error "problem deleting file '$file'"
    exit 1
  fi
  echo "'$file' deleted"
  exit 0
}

# error() prints the error to stdout
error() {
  echo "$(basename $0): $1" >&2
}

# find_file() searches in the notes directory for a file name matching the users
# input. If one is found then it will be chosen, if more than one is found the
# user is presented with a selection to choose from.
find_file() {
  file=$1
  # readable file? no point searching, use it
  if [ -r "$1" ]; then
    return 0
  fi

  local search=$(find -type f -not -path './.git' -iname "$1" -o -iname "$1.md" -printf "%P\n")
  local file_count=$(wc -l <<< $search)

  # no file found, let's create a new one
  if [ -z "$search" ]; then
    return 1
  fi

  # the file exists so use that one
  if [ $file_count = 1 ]; then
    file=$search
    return 0
  fi

  PS3="More than one file found, which one? "
  select option in $search; do
    if [ ! -z "$option" ]; then
      file=$option
      break
    fi
  done
  return 0
}

# print_notes() prints all notes in the notes directory
print_notes() {
  ls -R1 *
}

# search_notes() will search the notes directory for a file with
# the specified name
search_notes() {
  find -type f -iname '*'"$1"'*' -printf "%P\n" | sort
}

# search_text() will search the text of notes looking for the given text
search_text() {
  grep -FHiRT --color -C1 "$*"
}

# usage() prints the usage, duh.
usage() {
  echo "
  usage: note [--help|-h]
              [--list|-l]
              [--search|-s <name>]
              [--text-search|-t <text...>]
              [ --delete|-d <name> ]
              [--] [<name>]
"
}

if [ ! -d $notes_dir ]; then
  error "$notes_dir does not exist"
  exit 1
fi

cd $notes_dir

case "$1" in
  --list | -l )
    print_notes
    exit 0
    ;;
  --search | -s)
    shift
    check_not_empty $1
    search_notes $1
    exit $?
    ;;
  --text-search | -t)
    shift
    check_not_empty $1
    search_text "$@"
    exit $?
    ;;
  --delete | -d)
    shift
    check_not_empty $1
    delete_file $1
    ;;
  --)
    shift
    find_file $1
    ;;
  --help | -t)
    usage
    exit 0
    ;;
  -*)
    error "unknown option"
    exit 1
    ;;
  * )
    find_file $1
    ;;
esac

# Set extension if
# - a file name has been provided
# - the file name doesn't have a . followed by anything
if [ -n "$file" ] && grep -vE "\..*$" <<< $file > /dev/null; then
  echo $ext

  file=$file.$ext
fi

${EDITOR:-vim} $notes_dir/$file
